from telegram import Update, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler

#import random
import re
from datetime import datetime

import cat
from config import bot, worksheet, CHECK_CHAT, ORDER_DELETE, ORDER_ADD, ORDER_DONE
from admin import admin_reload
from keyboards import keyboard_delete, keyboard_change


# –ë–æ—Ç –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–∫–∞–∑–æ–º
async def order_user(update: Update, context: CallbackContext) -> None:
    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ
    update = update.message
    message = update.text
    user = update.from_user.username
    day = datetime.now().strftime("%d.%m")
    timez = datetime.now().strftime("%H:%M")
    strings = re.findall(r'\n', message)
    order = re.search(r'\d{6}-\d{6}', message)
    time_end = re.search(r'\d\d:\d\d', message)
    # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ
    text = (
        f'*–£—Å–ø–µ—Ö–æ–≤ –≤ —Å–±–æ—Ä—Ä—Ä–∫–µ –∑–∞–∫–∞–∑–∞ {order.group(0)}!* üòΩ\n\n'
        f'–ö–æ–≥–¥–∞ —Å–æ–±–µ—Ä—ë—à—å –∑–∞–∫–∞–∑ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–∏–π\n\n'
        f'–ù–∞–∂–º–∏ *¬´+ –ø–æ–∑–∏—Ü–∏—è¬ª* –µ—Å–ª–∏ —É —Ç–µ–±—è –¥–æ–±–∞–≤–∏–ª–∏—Å—å –ø–æ–∑–∏—Ü–∏–∏\n'
        f'–ù–∞–∂–º–∏ *¬´–û—Ç–º–µ–Ω–∞¬ª* –µ—Å–ª–∏ –∑–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–∏–ª—Å—è\n'
        f'–ù–∞–ø–∏—à–∏ *¬´+1¬ª* —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è –∫ –∑–∞–∫–∞–∑—É\n\n'
        f'–ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–π –Ω–µ–±—ã–ª–æ, —Ç–æ –º–æ–∂–µ—à—å —Å—Ä–∞–∑—É –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ —á–µ–∫–∞!'
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —á–∞—Ç –∏ —Ç–∞–±–ª–∏—Ü—É
    await update.reply_text(text, parse_mode='markdown', reply_markup=InlineKeyboardMarkup(keyboard_delete))
    val = worksheet.cell(1, 1).value                    # –Ω–æ–º–µ—Ä —Å–≤–æ–±–æ–¥–Ω–æ–π —è—á–µ–π–∫–∏
    worksheet.update_cell(val, 1, day)                  # –¥–µ–Ω—å —Å–±–æ—Ä–∫–∏
    worksheet.update_cell(val, 2, order.group(0))       # –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∫–∞
    worksheet.update_cell(val, 3, user)                 # –Ω–∏–∫ —Å–±–æ—Ä—â–∏–∫–∞
    worksheet.update_cell(val, 4, timez)                # –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–±–æ—Ä–∫–∏
    worksheet.update_cell(val, 5, len(strings)-13)      # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π
    worksheet.update_cell(val, 9, time_end.group(0))    # –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
    await admin_reload(update, context)

    return ORDER_DELETE


# –û—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
async def delete_answer(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    try:
        check = query.data
    except:
        update = update.message
        delete = update.text
        user = update.from_user.username
    else:
        await query.answer()
        await query.edit_message_reply_markup(reply_markup=None)
        delete = check
        update = query.message
        user = update.chat.username
    text = (
        f'*–Ø –∑–∞–ø–∏—Å–∞–ª —Ç–≤–æ–∏ —É–¥–∞–ª–µ–Ω–∏—è!* üñç\n\n–¢–µ–ø–µ—Ä—å –∂–¥—É —Ñ–æ—Ç–æ —á–µ–∫–∞ ;)\n'
        f'_–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –µ–≥–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–µ—à—å_'
    )
    await update.reply_text(text, parse_mode='markdown', reply_markup=InlineKeyboardMarkup(keyboard_change))
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É
    scan = worksheet.findall(user)[-1] # –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
    worksheet.update_cell(scan.row, 6, delete)

    return ORDER_DONE


# –û—Ç–≤–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
async def add_pos(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    text = (
        f'–£ —Ç–µ–±—è –¥–æ–±–∞–≤–∏–ª–∏—Å—å –ø–æ–∑–∏—Ü–∏–∏, –æ—Ç–ª–∏—á–Ω–æ!\n\n'
        f'–ü—Ä–∏—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º —Å–∫–æ–ª—å–∫–æ –∏—Ö —É —Ç–µ–±—è'
    )
    await query.edit_message_reply_markup(reply_markup=None)
    await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard_change))

    return ORDER_ADD


# –û—Ç–≤–µ—Ç –Ω–∞ —É—Å–ø–µ—à–Ω—é –∑–∞–ø–∏—Å—å
async def add_answer(update: Update, context: CallbackContext) -> None:
    update = update.message
    add = update.text # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π
    text = (
        f'–Ø –∑–∞–ø–∏—Å–∞–ª –Ω–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ ;) –¢–µ–ø–µ—Ä—å –∂–¥—É —Ñ–æ—Ç–æ —á–µ–∫–∞\n'
        f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏ –µ–≥–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–µ—à—å'
    )
    await update.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard_change))
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É
    numb = f'-{add}'
    user = update.from_user.username
    scan = worksheet.findall(user)[-1] # –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
    worksheet.update_cell(scan.row, 6, numb)

    return ORDER_DONE


# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–¥–∞–ª–µ–Ω–∏—è–º
async def delete_back(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    text = (
        f'–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –µ—â–µ —Ä–∞–∑ –æ—Ç–º–µ—Ç–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–∏–π:'
    )
    await query.edit_message_reply_markup(reply_markup=None)
    await query.message.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard_delete))

    return ORDER_DELETE


# –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω—É—Ç—ã
async def add_min(update: Update, context: CallbackContext) -> None:
    update = update.message
    minute = re.search('\d{1,2}', update.text) # —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ–±–∞–≤–∏–ª–æ—Å—å
    text = (
        f'–Ø –¥–æ–±–∞–≤–∏–ª –∫ —Ç–≤–æ–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ {min.group(0)} –º–∏–Ω—É—Ç. –ê —Ç–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –∫–Ω–æ–ø–∫–µ, –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–∏–π —Ü–∏—Ñ—Ä–æ–π.'
    )
    await update.reply_text(text, reply_markup=InlineKeyboardMarkup(keyboard_delete))
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É
    user = update.from_user.username
    scan = worksheet.findall(user)[-1] # –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
    worksheet.update_cell(scan.row, 7, minute.group(0))

    return ORDER_DELETE


# –ó–∞–∫—Ä—ã–≤–∞–µ–º –∑–∞–∫–∞–∑
async def done(update: Update, context: CallbackContext) -> None:
    update = update.message
    user = update.from_user.username
    time_now = datetime.now().strftime("%H:%M")
    scan = worksheet.findall(user)[-1]
    worksheet.update_cell(scan.row, 8, time_now)
    val = worksheet.get('A{}:AC{}'.format(scan.row, scan.row))
    text = (
        f'*–ó–∞–∫–∞–∑ {val[0][1]} —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!* –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –∑–∞–∫–∞–∑:\n'
        f'üõí –ö–æ—Ä–∑–∏–Ω–∞: *{val[0][15]}*, ‚è≥ –í—Ä–µ–º—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: *{val[0][16]}*\n\n'
        f'–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å:\n'
        f'üõí –ö–æ—Ä–∑–∏–Ω–∞: *{val[0][19]}*, ‚è≥ –í—Ä–µ–º—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: *{val[0][20]}*, üíµ –°—Ç–∞–≤–∫–∞: *{val[0][21]}*, –ó–∞–∫–∞–∑–æ–≤: *{val[0][22]}*\n\n'
        f'–ü–µ—Ä–µ—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–∫–∞–∑, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–¥—ë—Ç :)'
    )
    text_order = (
        f'–ß–µ–∫ –ø–æ –∑–∞–∫–∞–∑—É {val[0][1]}:'
    )
    await update.reply_text(text, parse_mode='markdown')
    await bot.send_message(CHECK_CHAT, text_order)
    await update.forward(CHECK_CHAT)
    await admin_reload(update, context)

    return ConversationHandler.END


# –ó–∞–∫—Ä—ã–≤–∞–µ–º –∑–∞–∫–∞–∑ –ø–æ—Å–ª–µ —Ñ–æ—Ç–æ —á–µ–∫–∞
async def done_photo(update: Update, context: CallbackContext) -> None:
    update = update.message
    user = update.from_user.username
    time = datetime.now().strftime("%H:%M")
    scan = worksheet.findall(user)[-1]
    worksheet.update_cell(scan.row, 6, "0")
    worksheet.update_cell(scan.row, 8, time)
    val = worksheet.get('A{}:AC{}'.format(scan.row, scan.row))
    text = (
        f'*–ó–∞–∫–∞–∑ {val[0][1]} —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç!* –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –∑–∞–∫–∞–∑:\n'
        f'üõí –ö–æ—Ä–∑–∏–Ω–∞: *{val[0][15]}*, ‚è≥ –í—Ä–µ–º—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: *{val[0][16]}*\n\n'
        f'–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å:\n'
        f'üõí –ö–æ—Ä–∑–∏–Ω–∞: *{val[0][19]}*, ‚è≥ –í—Ä–µ–º—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é: *{val[0][20]}*,\n üíµ –°—Ç–∞–≤–∫–∞: *{val[0][21]}*, –ó–∞–∫–∞–∑–æ–≤: *{val[0][22]}*\n\n'
        f'–ü–µ—Ä–µ—Å—ã–ª–∞–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–∫–∞–∑, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–¥—ë—Ç :)'
    )
    text_order = (
        f'–ß–µ–∫ –ø–æ –∑–∞–∫–∞–∑—É {val[0][1]}:'
    )
    await update.reply_text(text, parse_mode='markdown')
    #random_sticker = lambda: random.choice(cat.sticker)
    #await update.reply_sticker(sticker=random_sticker())
    await bot.send_message(CHECK_CHAT, text_order)
    await update.forward(CHECK_CHAT)
    await admin_reload(update, context)

    return ConversationHandler.END


# –û—Ç–º–µ–Ω—è–µ–º –∑–∞–∫–∞–∑
async def order_cancel(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    try:
        query.data
    except:
        update = update.message
        user = update.from_user.username
    else:
        await query.answer()
        await query.edit_message_reply_markup(reply_markup=None)
        update = query.message
        user = update.chat.username
        
    text = (f'–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –ñ–¥—É —Å–ª–µ–¥—É—é—â–µ–≥–æ ;)')
    await update.reply_text(text)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–∏—è –≤ —Ç–∞–±–ª–∏—Ü—É
    scan = worksheet.findall(user)[-1] # –∏—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
    worksheet.update_cell(scan.row, 10, "–û—Ç–º–µ–Ω–∞")
    await admin_reload(update, context)

    return ConversationHandler.END


async def order_close(update: Update, context: CallbackContext) -> None:
    text = (f'–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω. –ñ–¥—É —Å–ª–µ–¥—É—é—â–µ–≥–æ ;)')
    await update.message.reply_text(text)

    return ConversationHandler.END